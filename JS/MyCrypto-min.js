/*
MyCrypto.js v1.1 by FranaTrtur
My/MyCrypto.js
*/

/*MIT LICENSE (My/LICENSE.txt)

Copyright (c) 2019 František Artur Čech
Permission is hereby granted, free of charge, to any person obtaining a copy of this software
and associated documentation files (the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, 
subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
MyCrypto={MCS:{},CRC:{},Enc:{},info:{version:"1.1",author:"František Artur Čech (FranaTrtur) - CZ"}},MyCrypto.Enc={Utf8:{parse:function(t){if("function"==typeof TextEncoder)return Array.from(new TextEncoder("utf-8").encode(t));for(var r=unescape(encodeURIComponent(t)),e=[],n=0;n<r.length;n++)e[n]=r.charCodeAt(n);return e},stringify:function(t){if("function"==typeof TextDecoder)return new TextDecoder("utf-8").decode(new Uint8Array(t));for(var r="",e=0;e<t.length;e++)r+=String.fromCharCode(t[e]);return decodeURIComponent(escape(r))}},Hex:{parse:function(t){for(var r=[],e=0;e<t.length;e+=2)r.push(parseInt(t.charAt(e)+t.charAt(e+1),16));return r},stringify:function(t){for(var r="",e=0;e<t.length;e++)r+=("00"+t[e].toString(16)).substr(-2);return r}},Bin:{parse:function(t){for(var r=[],e=0;e<t.length;e+=8)r.push(parseInt(t.slice(e,e+8),2));return r},stringify:function(t){for(var r="",e=0;e<t.length;e++)r+=("00000000"+t[e].toString(2)).substr(-8);return r}},Base64:{parse:function(t){for(var r=[],e=window.atob(t),n=0;n<e.length;n++)r[n]=e.charCodeAt(n);return r},stringify:function(t){for(var r="",e=0;e<t.length;e++)r+=String.fromCharCode(t[e]);return window.btoa(r)}},Ascii:{parse:function(t){for(var r="",e=[],n=0;n<t.length;n++)r+=("0000000"+t.charCodeAt(n).toString(2)).slice(-7);for(var o=0;o<r.length;o+=8)e.push(parseInt(r.substr(o,8),2));return e},stringify:function(t){for(var r=t.slice(0),e="",n="",o=[],y=0;y<r.length;y++){if(y==r.length-1){for(;(e.length+r[r.length-1].toString(2).length)%7!=0;)e+="0";e+=r[r.length-1].toString(2);break}e+=("00000000"+r[y].toString(2)).slice(-8)}for(var i=0;i<e.length;i+=7)o.push(parseInt(e.substr(i,7),2));for(var s=0;s<o.length;s++)n+=String.fromCharCode(o[s]);return n}},Latin1:{parse:function(t){for(var r=[],e=0;e<t.length;e++)r[e]=t.charCodeAt(e)%256;return r},stringify:function(t){for(var r="",e=0;e<t.length;e++)r+=String.fromCharCode(t[e]);return r}},Words:{to:function(t){for(var r=[],e=0;e<t.length;e+=4)r.push((t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0);return r},from:function(t){for(var r=[],e=0;e<t.length;e++)r=r.concat([t[e]<<24>>>24,t[e]<<16>>>24,t[e]<<8>>>24,t[e]>>>24]);return r}}},MyCrypto.MCS.Core={},MyCrypto.MCS.Paddings={},MyCrypto.MCS.Modes={},MyCrypto.MCS.Core.S_box=[193,239,205,242,141,225,27,131,221,105,142,218,181,45,144,165,90,227,9,42,202,149,162,25,53,11,50,101,87,115,187,16,196,82,116,47,215,38,3,195,111,217,127,51,58,208,223,163,30,13,172,253,201,188,143,102,114,232,129,137,5,43,19,203,171,168,48,56,118,123,61,244,124,29,94,194,234,154,175,250,20,169,198,183,164,185,213,150,63,6,31,121,167,151,135,125,132,214,109,153,8,88,174,190,113,140,36,200,182,89,37,189,192,40,216,180,68,84,179,112,55,32,103,70,147,228,222,12,23,75,219,247,199,138,49,139,83,254,220,110,22,28,191,79,236,2,120,34,146,241,230,104,134,184,17,251,35,235,108,14,207,157,39,106,57,145,91,73,54,240,173,130,245,122,248,176,60,170,64,93,52,252,26,1,158,186,133,7,209,238,152,126,74,24,211,128,86,41,78,178,249,46,148,212,206,77,243,66,65,98,159,69,0,166,18,204,136,80,210,67,10,197,255,59,246,44,62,100,72,4,161,33,92,81,224,155,15,119,97,76,237,233,117,95,229,85,231,21,96,177,156,71,107,99,226,160],MyCrypto.MCS.Core.SubBytes=function(t){for(var r=[],e=0;e<t.length;e++)r[e]=MyCrypto.MCS.Core.S_box[t[e]];return r},MyCrypto.MCS.Core.SubBytesInv=function(t){for(var r=[],e=0;e<t.length;e++)r[e]=MyCrypto.MCS.Core.S_box.indexOf(t[e]);return r},MyCrypto.MCS.Core.Shuffle=function(t){return[t[9],t[4],t[13],t[8],t[15],t[12],t[0],t[14],t[2],t[7],t[1],t[5],t[10],t[11],t[3],t[6]]},MyCrypto.MCS.Core.ShuffleInv=function(t){return[t[6],t[10],t[8],t[14],t[1],t[11],t[15],t[9],t[3],t[0],t[12],t[13],t[5],t[2],t[7],t[4]]},MyCrypto.MCS.Core.Permute=function(t,r){r=Array.isArray(r)?r:[90,245,165,194];for(var e,n,o,y,i=function(t,r){return(t<<r|t>>8-r)<<24>>>24},s=[],C=0;C<t.length;C+=4)e=t[C]^t[C+3]^r[C%r.length],n=t[C+1]^e^r[(C+1)%r.length],o=t[C+2]^n^r[(C+2)%r.length],y=t[C+3]^o^r[(C+3)%r.length],s[C+3]=y^i(e,3),s[C+2]=o^i(s[C+3],3),s[C+1]=n^i(s[C+2],3),s[C]=e^i(s[C+1],3);return s},MyCrypto.MCS.Core.PermuteInv=function(t,r){r=Array.isArray(r)?r:[90,245,165,194];for(var e,n,o,y,i=function(t,r){return(t<<r|t>>8-r)<<24>>>24},s=[],C=0;C<t.length;C+=4)e=t[C]^i(t[C+1],3),n=t[C+1]^i(t[C+2],3),o=t[C+2]^i(t[C+3],3),y=t[C+3]^i(e,3),s[C+3]=y^o^r[(C+3)%r.length],s[C+2]=o^n^r[(C+2)%r.length],s[C+1]=n^e^r[(C+1)%r.length],s[C]=e^s[C+3]^r[C%r.length];return s},MyCrypto.MCS.Core.ApplyKey=function(t,r){for(var e=t.slice(0),n=0;n<t.length;n++)e[n]^=r[n%r.length];return e},MyCrypto.MCS.Core.AddKey=function(t,r){for(var e=[],n=0;n<t.length;n++)e[n]=(t[n]+r[n%r.length])%256;return e},MyCrypto.MCS.Core.SubKey=function(t,r){for(var e=[],n=0;n<t.length;n++)e[n]=(t[n]-r[n%r.length]+256)%256;return e},MyCrypto.MCS.Core.ExpandKey=function(t,r){"number"!=typeof r&&(r=0);for(var e=[2,4,8,16,32,64,128,240,27,59,91,155],n=t.slice(-4),o=[MyCrypto.MCS.Core.S_box[n[3]]^e[r%e.length]^t[0],MyCrypto.MCS.Core.S_box[n[0]]^t[1],MyCrypto.MCS.Core.S_box[n[1]]^t[2],MyCrypto.MCS.Core.S_box[n[2]]^t[3]],y=4;y<16;y++)o[y]=o[y-4]^t[y];return o},MyCrypto.MCS.Core.CompressKey=function(t){return[t[6]^t[10],t[8]^t[14],t[1]^t[11],t[15]^t[3],t[9]^t[0],t[12]^t[2],t[5]^t[13],t[7]^t[4]]},MyCrypto.MCS.Core.EncryptRound=function(t,r){return MyCrypto.MCS.Core.ApplyKey(MyCrypto.MCS.Core.Permute(MyCrypto.MCS.Core.Shuffle(MyCrypto.MCS.Core.SubBytes(t)),MyCrypto.MCS.Core.CompressKey(r)),r)},MyCrypto.MCS.Core.DecryptRound=function(t,r){return MyCrypto.MCS.Core.SubBytesInv(MyCrypto.MCS.Core.ShuffleInv(MyCrypto.MCS.Core.PermuteInv(MyCrypto.MCS.Core.ApplyKey(t,r),MyCrypto.MCS.Core.CompressKey(r))))},MyCrypto.MCS.GenerateBlock=function(t,r){return r="number"==typeof r?r:16,MyCrypto.CRC.Extended(t+"",Math.ceil(r/4),!1).toBytes().slice(0,r)},MyCrypto.MCS.DeriveKey=function(t,r,e,n){return n="number"==typeof n?n:16,e="number"==typeof e?e:128,MyCrypto.CRC.Extended(t+MyCrypto.Enc.Latin1.stringify(r),e,!0).toBytes().slice(-n)},MyCrypto.MCS.ParseKey=function(t,r){return MyCrypto.Enc.hasOwnProperty(r)?MyCrypto.Enc[r].parse(t):void 0!==r.parse?r.parse(t):t},MyCrypto.MCS.RandomBytes=function(t){t="number"==typeof t?t:16;for(var r=[],e=0;e<t;e++)r.push(Math.floor(256*Math.random()));return r},MyCrypto.MCS.Schedule=function(t,r){var e=[t.slice(0)];r="number"!=typeof r?9:r;for(var n=0;n<r;n++)e.push(MyCrypto.MCS.Core.ExpandKey(e[e.length-1],n));return e},MyCrypto.MCS.Format=function(t,r){r="number"==typeof r?r:16;for(var e=[],n=0;n<t.length;n+=r)e.push(t.slice(n,n+r));return e},MyCrypto.MCS.Deformat=function(t){if(!Array.isArray(t[0]))return t;for(var r=[],e=0;e<t.length;e++)r=r.concat(t[e]);return r},MyCrypto.MCS.Paddings={Nulls:{pad:function(t){for(;t.length%16!=0;)t.push(0);return t},unpad:function(t){for(;0===t[t.length-1];)t.pop();return t}},Insert:{pad:function(t){for(;t.length%16!=0;)t.splice(Math.floor(Math.random()*(t.length+1)),0,0);return t},unpad:function(t){for(var r=0;r<t.length;r++)for(;0===t[r];)t.splice(r,1);return t}},Pkcs7:{pad:function(t){var r=-1*(t.length%16-16);if(0===r)return t;for(var e=[r];(t.length+e.length)%16!=0;)e.unshift(r);return e=e.slice(-r),t=t.concat(e)},unpad:function(t){var r=t[t.length-1];if(r>16)return t;for(var e=t.slice(-r),n=0;n<e.length;n++)if(e[n]!=r)return t;return t.slice(0,t.length-r)}},ISO_10126:{pad:function(t){var r=-1*(t.length%16-16);0===r&&(t.push(0),r=-1*(t.length%16-16)+1);for(var e=[r];(t.length+e.length)%16!=0;)e.unshift(Math.floor(256*Math.random()));return e=e.slice(-r),t=t.concat(e)},unpad:function(t){var r=t[t.length-1];if(r>16)return t;if(16===r)return t=t.slice(0,t.length-16);for(;-1*(t.length%16-16)!=r;)t.pop();return t}}},MyCrypto.MCS.encrypt=function(t,r,e){return MyCrypto.MCS.Encryptor({mode:"CBC",rounds:9,salt:void 0===e||e,key:r,iv:!0,encoding:{input:"Utf8",output:"Base64"},padding:"Pkcs7"}).encrypt(t).toString()},MyCrypto.MCS.decrypt=function(t,r,e){return MyCrypto.MCS.Encryptor({mode:"CBC",rounds:9,salt:void 0===e||e,key:r,iv:!0,encoding:{input:"Utf8",output:"Base64"},padding:"Pkcs7"}).decrypt(t).toString()},MyCrypto.MCS.exportObj=function(t,r,e,n,o){return{encryptor:o,usedParams:e,include:!!n,encoding:"object"==typeof r&&"function"==typeof r.stringify?r.stringify:"function"==typeof r?r:"string"==typeof r&&MyCrypto.Enc.hasOwnProperty(r)?MyCrypto.Enc[r].stringify:MyCrypto.Enc.Hex.stringify,data:MyCrypto.MCS.Deformat(t),toString:function(t,r){var e=(r="boolean"==typeof r?r:this.include)&&this.usedParams.salt?MyCrypto.Enc.Latin1.parse("Salted"+this.usedParams.salt.length.toString(32)).concat(this.usedParams.salt).concat(this.data):this.data;return"object"==typeof t&&"function"==typeof t.stringify?t.stringify(e):"function"==typeof t?t(e):t?MyCrypto.Enc[t].stringify(e):this.encoding(e)}}},MyCrypto.MCS.importObj=function(t,r){if(!r)throw"Encoding required";if("object"==typeof t&&Array.isArray(t.data))return t;var e=(r="string"==typeof r&&MyCrypto.Enc.hasOwnProperty(r)?MyCrypto.Enc[r].parse:"function"==typeof r?r:r.parse)(t);if("Salted"==MyCrypto.Enc.Latin1.stringify(e.slice(0,6)))var n=parseInt(MyCrypto.Enc.Latin1.stringify(e.slice(6,7)),32),o=e.slice(7,7+n),y=e.slice(7+n);else o=!1,y=e;return{data:y,salt:o}},MyCrypto.MCS.settingsObj_structure='settingsObj structure: {\n\tmode: string("CTR" or "CBC" or "CFB" or "ECB"),\n\trounds: (integer 1-32)->main_encryption_rounds_count,\n\tsalt: array(2-16)->raw_bytes or true->8_random_bytes or false->no_salt or (integer 2-16)->[x]_random_bytes,\n\tkey: array(16)->raw_bytes or string->derive or true->random or false->zero-filled,\n\tiv: array(16)->raw_bytes or string->derive or true->from_key or false->zero-filled,\n\tencoding: {\n\t\tinput: "Utf8" or "Ascii" or "Hex" or "Bin" or "Base64" or "Latin1",\n\t\toutput: "Base64" or "Hex" or "Bin" or "Latin1"\n\t},\n\tpadding: "Pkcs7" or "Insert" or "Nulls" or "ISO_10126" or false->no_padding\n}',MyCrypto.MCS.toSettings=function(t,r,e,n,o,y,i,s){return{mode:t,rounds:r,key:e,iv:n,salt:o,encoding:{input:i,output:s},padding:y}},MyCrypto.MCS.Encryptor=function(t){if(!t)throw"Settings-object required, see MyCrypto.MCS.settingsObj_structure for the right structure";return{settings:t,encrypt:function(t,r){if(!t)throw"No data to encrypt";var e=Array.isArray(t)?t:MyCrypto.Enc[this.settings.encoding.input].parse(t),n=Array.isArray(this.settings.salt)?this.settings.salt:"number"==typeof this.settings.salt?MyCrypto.MCS.RandomBytes(this.settings.salt):0!=this.settings.salt&&MyCrypto.MCS.RandomBytes(8),o=Array.isArray(this.settings.key)?this.settings.key:0==this.settings.key?[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]:1==this.settings.key?MyCrypto.MCS.RandomBytes(16):MyCrypto.MCS.DeriveKey(this.settings.key,n,128,16),y=Array.isArray(this.settings.iv)?this.settings.iv:0==this.settings.iv?[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]:1==this.settings.iv?MyCrypto.MCS.Core.EncryptRound(MyCrypto.MCS.Core.ExpandKey(o,10),o):MyCrypto.MCS.DeriveKey(this.settings.iv,n,64,16);this.settings.padding&&(e=MyCrypto.MCS.Paddings[this.settings.padding].pad(e));var i=MyCrypto.MCS.Modes[this.settings.mode.toUpperCase()].encrypt(e,o,y,this.settings.rounds,r);return MyCrypto.MCS.exportObj(i,MyCrypto.Enc[this.settings.encoding.output],{mode:this.settings.mode.toUpperCase(),key:o,iv:y,salt:n,rounds:this.settings.rounds},"boolean"==typeof this.settings.salt||"number"==typeof this.settings.salt,this)},decrypt:function(t,r){if(!t)throw"No data to decrypt";if("object"==typeof t&&t.hasOwnProperty("usedParams"))var e=t.data,n=t.usedParams.salt,o=t.usedParams.key,y=t.usedParams.iv;else{var i=MyCrypto.MCS.importObj(t,MyCrypto.Enc[this.settings.encoding.output]);e=Array.isArray(t)?t:i.data,n=Array.isArray(i.salt)?i.salt:!!Array.isArray(this.settings.salt)&&this.settings.salt,o=Array.isArray(this.settings.key)?this.settings.key:0==this.settings.key?[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]:MyCrypto.MCS.DeriveKey(this.settings.key,n,128,16),y=Array.isArray(this.settings.iv)?this.settings.iv:0==this.settings.iv?[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]:1==this.settings.iv?MyCrypto.MCS.Core.EncryptRound(MyCrypto.MCS.Core.ExpandKey(o,10),o):MyCrypto.MCS.DeriveKey(this.settings.iv,n,64,16)}var s=MyCrypto.MCS.Modes[this.settings.mode.toUpperCase()].decrypt(e,o,y,this.settings.rounds,r);return this.settings.padding&&(s=MyCrypto.MCS.Paddings[this.settings.padding].unpad(s)),MyCrypto.MCS.exportObj(s,MyCrypto.Enc[this.settings.encoding.input],{mode:this.settings.mode.toUpperCase(),key:o,iv:y,salt:n,rounds:this.settings.rounds},!1,this)}}},MyCrypto.MCS.Modes.ECB={encrypt:function(t,r,e,n){for(var o=MyCrypto.MCS.Format(t,16),y=MyCrypto.MCS.Schedule(r,n),i=0;i<o.length;i++)o[i]=MyCrypto.MCS.Core.AddKey(o[i],r);for(var s=0;s<y.length;s++)for(i=0;i<o.length;i++)o[i]=MyCrypto.MCS.Core.EncryptRound(o[i],y[s]);return MyCrypto.MCS.Deformat(o)},decrypt:function(t,r,e,n){for(var o=MyCrypto.MCS.Format(t,16),y=MyCrypto.MCS.Schedule(r,n).reverse(),i=0;i<y.length;i++)for(var s=0;s<o.length;s++)o[s]=MyCrypto.MCS.Core.DecryptRound(o[s],y[i]);for(s=0;s<o.length;s++)o[s]=MyCrypto.MCS.Core.SubKey(o[s],r);return MyCrypto.MCS.Deformat(o)}},MyCrypto.MCS.Modes.CBC={encrypt:function(t,r,e,n){for(var o=MyCrypto.MCS.Format(t,16),y=MyCrypto.MCS.Schedule(r,n),i=[e],s=0;s<o.length;s++)o[s]=MyCrypto.MCS.Core.AddKey(o[s],r);for(s=0;s<o.length;s++){o[s]=MyCrypto.MCS.Core.ApplyKey(o[s],i[s]);for(var C=0;C<y.length;C++)o[s]=MyCrypto.MCS.Core.EncryptRound(o[s],y[C]);i[s+1]=o[s]}return MyCrypto.MCS.Deformat(o)},decrypt:function(t,r,e,n){for(var o=MyCrypto.MCS.Format(t,16),y=MyCrypto.MCS.Schedule(r,n).reverse(),i=[e],s=0;s<o.length;s++)i[s+1]=o[s].slice(0);for(s=0;s<o.length;s++){for(var C=0;C<y.length;C++)o[s]=MyCrypto.MCS.Core.DecryptRound(o[s],y[C]);o[s]=MyCrypto.MCS.Core.ApplyKey(o[s],i[s])}for(s=0;s<o.length;s++)o[s]=MyCrypto.MCS.Core.SubKey(o[s],r);return MyCrypto.MCS.Deformat(o)}},MyCrypto.MCS.Modes.CFB={encrypt:function(t,r,e,n){for(var o=MyCrypto.MCS.Format(t,16),y=MyCrypto.MCS.Schedule(r,n),i=[e],s=0;s<o.length;s++)o[s]=MyCrypto.MCS.Core.AddKey(o[s],r);for(s=0;s<o.length;s++){for(var C=0;C<y.length;C++)i[s]=MyCrypto.MCS.Core.EncryptRound(i[s],y[C]);o[s]=MyCrypto.MCS.Core.ApplyKey(o[s],i[s]),i[s+1]=o[s]}return MyCrypto.MCS.Deformat(o)},decrypt:function(t,r,e,n){for(var o=MyCrypto.MCS.Format(t,16),y=MyCrypto.MCS.Schedule(r,n),i=[e],s=0;s<o.length;s++)i[s+1]=o[s].slice(0);for(s=0;s<o.length;s++){for(var C=0;C<y.length;C++)i[s]=MyCrypto.MCS.Core.EncryptRound(i[s],y[C]);o[s]=MyCrypto.MCS.Core.ApplyKey(o[s],i[s])}for(s=0;s<o.length;s++)o[s]=MyCrypto.MCS.Core.SubKey(o[s],r);return MyCrypto.MCS.Deformat(o)}},MyCrypto.MCS.Modes.CTR={encrypt:function(t,r,e,n,o,y){var i=MyCrypto.MCS.Format(t,16),s=MyCrypto.MCS.Schedule(r,n),C=function(t){for(var r=t.slice(0).reverse(),e=0;e<r.length;e++){if(!(r[e]>=255)){r[e]++;break}r[e]=0}return r.reverse()},p=[],a="number"==typeof o?[0,0,0,0,0,0,0,0,0,0,0,0,o>>>24,o<<8>>>24,o<<16>>>24,o<<24>>>24]:Array.isArray(o)?[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0].concat(o).slice(-16):[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];if(!y)for(var u=0;u<i.length;u++)i[u]=MyCrypto.MCS.Core.AddKey(i[u],r);for(u=0;u<i.length;u++){p[u]=MyCrypto.MCS.Core.ApplyKey(a,e);for(var M=0;M<s.length;M++)p[u]=MyCrypto.MCS.Core.EncryptRound(p[u],s[M]);i[u]=MyCrypto.MCS.Core.ApplyKey(i[u],p[u]),a=C(a)}if(y)for(u=0;u<i.length;u++)i[u]=MyCrypto.MCS.Core.SubKey(i[u],r);return MyCrypto.MCS.Deformat(i)},decrypt:function(t,r,e,n,o){return MyCrypto.MCS.Modes.CTR.encrypt(t,r,e,n,o,!0)}},MyCrypto.CRC.table=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],MyCrypto.CRC.Digest=function(t){for(var r=-1,e=0,n=t.length;e<n;e++)r=r>>>8^MyCrypto.CRC.table[255&(r^t.charCodeAt(e))];return{words:[(-1^r)>>>0],toString:function(t){if("string"==typeof t&&MyCrypto.Enc.hasOwnProperty(t))return MyCrypto.Enc[t].stringify(this.toBytes());if("object"==typeof t&&t.hasOwnProperty("stringify"))return t.stringify(this.toBytes());if("number"==typeof t){t=t>=2&&t<37?t:16;for(var r=(Math.pow(2,32)-1).toString(t).length,e="",n=0;n<this.words.length;n++)e+=("00000000000000000000000000000000"+this.words[n].toString(t)).substr(-r);return e}return MyCrypto.Enc.Hex.stringify(this.toBytes())},toBytes:function(){return MyCrypto.Enc.Words.from(this.words)}}},MyCrypto.CRC.Extended=function(t,r,e){for(var n,o="number"==typeof r&&r>0?r>4096?4096:r:1,y=[],i=t+(void 0===e||1==e?r.toString(32):""),s=0;s<=o;s++)n=MyCrypto.CRC.Digest(s%2==0?i+t:i+t.split("").reverse().join("")).words,y.push(n[0]),i+=MyCrypto.Enc.Latin1.stringify(MyCrypto.Enc.Words.from(n));return y.shift(),{words:y,toString:function(t){if("string"==typeof t&&MyCrypto.Enc.hasOwnProperty(t))return MyCrypto.Enc[t].stringify(this.toBytes());if("object"==typeof t&&t.hasOwnProperty("stringify"))return t.stringify(this.toBytes());if("number"==typeof t){t="number"==typeof t&&t>=2&&t<37?t:16;for(var r=(Math.pow(2,32)-1).toString(t).length,e="",n=0;n<this.words.length;n++)e+=("00000000000000000000000000000000"+this.words[n].toString(t)).substr(-r);return e}return MyCrypto.Enc.Hex.stringify(this.toBytes())},toBytes:function(){return MyCrypto.Enc.Words.from(this.words)}}};